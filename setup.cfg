[metadata]
name = kanonpy
real_name = kanon
author = Kanon Developers
author_email = lenigauffier@gmail.com
license = BSD 3-Clause
license_file = LICENSE
url = https://gitlab.obspm.fr/lgauffier/kanon
description = History of astronomy library
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = True
github_project = legau/kanon
keywords = astronomy, history, arithmetic, calendars, ptolemy, sexagesimal
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Sociology :: History
[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    numpy
    pandas
    requests
    scipy
    matplotlib

[options.entry_points]
hypothesis =
    _ = kanon.conftest:_hypothesis_sexagesimal_strategy
console_scripts =

[options.extras_require]
test =
    pytest-astropy
    requests-mock
    tox
    mypy
    types-requests
docs =
    sphinx-astropy
    nbsphinx
    ipython
    sphinx_rtd_theme

[options.package_data]
kanon =
    py.typed


[tool:pytest]
testpaths = "kanon" "docs" "examples"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = -p "no:hypothesispytest"
filterwarnings =
    ignore:numpy.ndarray size changed:RuntimeWarning

[coverage:run]
omit =
    kanon/_astropy_init*
    kanon/conftest.py
    kanon/*setup_package*
    kanon/tests/*
    kanon/*/tests/*
    kanon/extern/*
    kanon/version*
    */kanon/_astropy_init*
    */kanon/conftest.py
    */kanon/*setup_package*
    */kanon/tests/*
    */kanon/*/tests/*
    */kanon/extern/*
    */kanon/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
    # Ellipsis ...
    \.\.\.$
